import{i as e,n as t}from"./uni-app.es.03cc7760.js";const f=f=>{if(t("String",f))throw new Error("effect的依赖配置必须包含name且类型为字符串");return{data:()=>({effects:new Map}),provide(){return{[`${f}HasEffect`]:this.hasEffect,[`${f}ShowEffect`]:this.showEffect,[`${f}SizeEffects`]:this.sizeEffects,[`${f}TrackEffect`]:this.trackEffect,[`${f}ClearEffects`]:this.clearEffects,[`${f}DestoryEffect`]:this.destoryEffect,[`${f}TriggerEffect`]:this.triggerEffect,[`${f}TriggerAllEffect`]:this.triggerAllEffect}},methods:{hasEffect(e){return this.effects.has(e)},showEffect(e){return this.effects.get(e)},sizeEffects(){return this.effects.size},trackEffect(e,t){return this.effects.set(e,t)},clearEffects(){return this.effects.clear()},triggerEffect(t,f){const r=this.effects.get(t);return e("Function",r)?r(f):null},destoryEffect(e){return this.effects.delete(e)},triggerAllEffect(t){this.effects.forEach((f=>{e("Function",f)&&f(t)}))}}}},r=e=>{if(t("String",e))throw new Error("effect的注入配置必须包含name且类型为字符串");return{inject:{[`${e}HasEffect`]:{default:()=>{}},[`${e}ShowEffect`]:{default:()=>{}},[`${e}SizeEffect`]:{default:()=>{}},[`${e}TrackEffect`]:{default:()=>{}},[`${e}ClearEffects`]:{default:()=>{}},[`${e}DestoryEffect`]:{default:()=>{}},[`${e}TriggerEffect`]:{default:()=>{}},[`${e}TriggerAllEffect`]:{default:()=>{}}}}};export{r as I,f as P};
